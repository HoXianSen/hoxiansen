[{"title":"Hello World","url":"/2023/01/05/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"Java中doc、xls、ppt转pdf的方法","url":"/2023/01/08/Java%E4%B8%ADdoc%E3%80%81xls%E3%80%81ppt%E8%BD%ACpdf%E7%9A%84%E6%96%B9%E6%B3%95/","content":"一、Windows环境调用Office或者WPS的COM接口引入jacob依赖\n下载jacob-1.20依赖包并解压\n将其中的jar包安装到maven本地仓库（也可以直接在项目中引入jar包依赖） mvn install:install-file     -Dfile=&lt;/your/path/to/jacob.jar&gt;    -DgroupId=com.jacob    -DartifactId=jacob    -Dversion=1.20 -Dpackaging=jar\n把jacob-1.20-x64.dll和jacob-1.20-x86.dll拷贝至%JAVA_HOME%\\jre\\bin目录\n\n\n关于jacob的更多使用方式，可以参考MicroSoft的VBA文档\n\n转换代码：public class JacobToPdfUtil &#123;    /**     * 转PDF格式值     */    private static final int WORD_FORMAT_PDF = 17;    private static final int EXCEL_FORMAT_PDF = 0;    private static final int PPT_FORMAT_PDF = 32;    private static final String PROGRAM_WORD_OFFICE = &quot;Word.Application&quot;;    private static final String PROGRAM_WORD_WPS = &quot;KWPS.Application&quot;;    private static final String PROGRAM_EXCEL_OFFICE = &quot;Excel.Application&quot;;    private static final String PROGRAM_EXCEL_WPS = &quot;KET.Application&quot;;    private static final String PROGRAM_PPT_OFFICE = &quot;PowerPoint.Application&quot;;    private static final String PROGRAM_PPT_WPS = &quot;KWPP.Application&quot;;    public static void wordToPdfByMsOffice(String inputFile, String pdfFile) throws IOException &#123;        wordToPdf(inputFile, pdfFile, PROGRAM_WORD_OFFICE);    &#125;    public static void wordToPdfByWps(String inputFile, String pdfFile) throws IOException &#123;        wordToPdf(inputFile, pdfFile, PROGRAM_WORD_WPS);    &#125;    private static void wordToPdf(String inputFile, String pdfFile, String program) throws IOException &#123;        ActiveXComponent app = null;        Dispatch doc = null;        try &#123;            // 创建一个word对象            app = new ActiveXComponent(program);            // 不可见打开word            app.setProperty(&quot;Visible&quot;, new Variant(false));            // 禁用宏            app.setProperty(&quot;AutomationSecurity&quot;, new Variant(3));            // 获取文挡属性            Dispatch docs = app.getProperty(&quot;Documents&quot;).toDispatch();            // 调用Documents对象中Open方法打开文档，并返回打开的文档对象Document            doc = Dispatch.call(docs, &quot;Open&quot;, inputFile).toDispatch();            // word保存为pdf格式宏，值为17            Dispatch.call(doc, &quot;SaveAs&quot;, pdfFile, WORD_FORMAT_PDF);        &#125; catch (Throwable t) &#123;            throw new IOException(&quot;word转pdf失败&quot;, t);        &#125; finally &#123;            if (doc != null) &#123;                Dispatch.call(doc, &quot;Close&quot;, false);            &#125;            if (app != null) &#123;                app.invoke(&quot;Quit&quot;);            &#125;            // 关闭WINWORD.exe进程            ComThread.Release();        &#125;    &#125;    public static void excelToPdfByMsOffice(String inputFile, String pdfFile) throws IOException &#123;        excelToPdf(inputFile, pdfFile, PROGRAM_EXCEL_OFFICE);    &#125;    public static void excelToPdfByWps(String inputFile, String pdfFile) throws IOException &#123;        excelToPdf(inputFile, pdfFile, PROGRAM_EXCEL_WPS);    &#125;    private static void excelToPdf(String inputFile, String pdfFile, String program) throws IOException &#123;        ActiveXComponent app = null;        Dispatch excel = null;        try &#123;            app = new ActiveXComponent(program);            // 不可见打开excel            app.setProperty(&quot;Visible&quot;, new Variant(false));            // 禁用宏            app.setProperty(&quot;AutomationSecurity&quot;, new Variant(3));            Dispatch workbooks = app.getProperty(&quot;Workbooks&quot;).toDispatch();            excel = Dispatch.call(workbooks, &quot;Open&quot;, inputFile).toDispatch();            Dispatch.call(excel, &quot;ExportAsFixedFormat&quot;, EXCEL_FORMAT_PDF, pdfFile);        &#125; catch (Throwable t) &#123;            throw new IOException(&quot;excel转pdf失败&quot;, t);        &#125; finally &#123;            if (excel != null) &#123;                Dispatch.call(excel, &quot;Close&quot;, false);            &#125;            if (app != null) &#123;                app.invoke(&quot;Quit&quot;);            &#125;            // 关闭WINWORD.exe进程            ComThread.Release();        &#125;    &#125;    public static void pptToPdfByMsOffice(String inputFile, String pdfFile) throws IOException &#123;        pptToPdf(inputFile, pdfFile, PROGRAM_PPT_OFFICE);    &#125;    public static void pptToPdfByWps(String inputFile, String pdfFile) throws IOException &#123;        pptToPdf(inputFile, pdfFile, PROGRAM_PPT_WPS);    &#125;    private static void pptToPdf(String inputFile, String pdfFile, String program) throws IOException &#123;        ActiveXComponent app = null;        Dispatch ppt = null;        try &#123;            // 创建一个ppt对象            app = new ActiveXComponent(program);            // 不能设置Visible=false。Hiding the application window is not allowed.            // 禁用宏            app.setProperty(&quot;AutomationSecurity&quot;, new Variant(3));            // 获取文挡属性            Dispatch presentations = app.getProperty(&quot;Presentations&quot;).toDispatch();            // 调用Documents对象中Open方法打开文档，并返回打开的文档对象Document            // 文档：https://learn.microsoft.com/zh-cn/office/vba/api/powerpoint.presentations.open            ppt = Dispatch.call(presentations, &quot;Open&quot;, inputFile,                    true, // ReadOnly                    false, // Untitled指定文件是否有标题                    false // WithWindow指定文件是否可见            ).toDispatch();            Dispatch.call(ppt, &quot;SaveAs&quot;, pdfFile, PPT_FORMAT_PDF);        &#125; catch (Throwable t) &#123;            throw new IOException(&quot;ppt转换pdf失败&quot;, t);        &#125; finally &#123;            if (ppt != null) &#123;                Dispatch.call(ppt, &quot;Close&quot;);            &#125;            if (app != null) &#123;                app.invoke(&quot;Quit&quot;);            &#125;            // 关闭WINWORD.exe进程            ComThread.Release();        &#125;    &#125;&#125;\n\n二、Linux环境调用LibreOffice安装LibreOffice\n去LibreOffice下载页下载对应Linux发行版的LibreOffice。\n解压后安装。 sudo dpkg -i DEBS/*.deb\n 或者 sudo yum install /RPMS/*.rpm\n增加中文字体，不然转换时中文会乱码。 # 检查系统中是否有中文字体fc-list :lang=zh\n 如果返回空，请按照这个文档去安装中文字体。\n安装完成之后运行一下libreoffice7.3 --help，可能会提示库找不到。我在CentOS7系统安装时就遇到了libcairo.so.2，libcups.so.2，libSM.so.6这三个库找不到的问题，执行下面几条命令安装需要的库： yum install cairo -yyum install cups-libs -yyum install libSM -y\n 如果遇到其他库找不到的问题可以参考上面解决。\n\n转换代码：public class LibreOfficeToPdfUtil &#123;    public static void toPdf(String inputFile, String pdfFile) throws BootstrapException, Exception &#123;        XComponentContext context = Bootstrap.bootstrap();        XMultiComponentFactory serviceManager = context.getServiceManager();        Object desktop = serviceManager.createInstanceWithContext(&quot;com.sun.star.frame.Desktop&quot;, context);        XDesktop xDesktop = UnoRuntime.queryInterface(XDesktop.class, desktop);        XComponentLoader xComponentLoader = UnoRuntime.queryInterface(XComponentLoader.class, xDesktop);        PropertyValue hidden = new PropertyValue();        hidden.Name = &quot;Hidden&quot;;        hidden.Value = Boolean.TRUE;        XComponent xComponent = xComponentLoader.loadComponentFromURL(&quot;file:///&quot; + inputFile, &quot;_blank&quot;, 0, new PropertyValue[]&#123;hidden&#125;);        XStorable xStorable = UnoRuntime.queryInterface(XStorable.class, xComponent);        PropertyValue overwrite = new PropertyValue();        overwrite.Name = &quot;Overwrite&quot;;        overwrite.Value = Boolean.TRUE;        PropertyValue filterName = new PropertyValue();        filterName.Name = &quot;FilterName&quot;;        filterName.Value = &quot;writer_pdf_Export&quot;;        xStorable.storeToURL(&quot;file:///&quot; + pdfFile, new PropertyValue[]&#123;overwrite, filterName&#125;);        xDesktop.terminate();    &#125;&#125;\n\n运行时报错解决\ncom.sun.star.comp.helper.BootstrapException: no office executable found!解决办法：添加java参数-Xbootclasspath/a:/opt/libreoffice7.3/program/原因：启动时会从classpath中寻找soffice文件，所以得把soffice所在目录加到classpath中。\n\n可以通过readlink &#96;which libreoffice7.3&#96;看libreoffice安装在哪个目录。\n\n\n点运行后一直等待，5分钟后抛出BootstrapException异常原因：libreoffice进程启动失败。解决办法：可以在命令行运行一下libreoffice看看是否缺少库，然后参考上面安装步骤解决。\n\n转换之后的pdf中文显示方框原因：系统中缺少中文字体。解决办法：参考安装步骤添加中文字体。\n\n\n参考文档：\n\nhttps://www.cnblogs.com/liangbo-/p/11424292.html\nhttps://www.codeproject.com/Tips/988667/Convert-Microsoft-Word-to-PDF-using-Java-and-Libre\nhttps://segmentfault.com/a/1190000006789644\n\n","categories":["Java"],"tags":["Java"]}]